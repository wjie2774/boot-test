<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zzzwww.post.dao.AttachmentAcquisitionMapper">
  <resultMap id="BaseResultMap" type="com.zzzwww.post.dto.entity.AttachmentAcquisition">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="target_id" jdbcType="BIGINT" property="targetId" />
    <result column="target_type" jdbcType="TINYINT" property="targetType" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="file_key" jdbcType="VARCHAR" property="fileKey" />
    <result column="level_id" jdbcType="BIGINT" property="levelId" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="deleted" jdbcType="TINYINT" property="deleted" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, target_id, target_type, file_name, file_key, level_id, create_by, create_time, update_by,
    update_time, deleted
  </sql>

  <insert id="insert" parameterType="com.zzzwww.post.dto.entity.AttachmentAcquisition" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into components_attachment_acquisition (id, target_id, target_type,
    file_name, file_key, create_by,
    create_time, update_by, update_time,
    deleted, level_id)
    values (#{id,jdbcType=BIGINT}, #{targetId,jdbcType=BIGINT}, #{targetType,jdbcType=TINYINT},
    #{fileName,jdbcType=VARCHAR}, #{fileKey,jdbcType=VARCHAR}, #{createBy,jdbcType=BIGINT},
    #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=BIGINT}, #{updateTime,jdbcType=TIMESTAMP},
    #{deleted,jdbcType=TINYINT}, #{levelId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.zzzwww.post.dto.entity.AttachmentAcquisition" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
    insert into components_attachment_acquisition
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="targetId != null">
        target_id,
      </if>
      <if test="targetType != null">
        target_type,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="fileKey != null">
        file_key,
      </if>
      <if test="createBy != null">
        create_by,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="deleted != null">
        deleted,
      </if>
      <if test="levelId != null">
        level_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="targetId != null">
        #{targetId,jdbcType=BIGINT},
      </if>
      <if test="targetType != null">
        #{targetType,jdbcType=TINYINT},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileKey != null">
        #{fileKey,jdbcType=VARCHAR},
      </if>
      <if test="createBy != null">
        #{createBy,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleted != null">
        #{deleted,jdbcType=TINYINT},
      </if>
      <if test="levelId != null">
        #{levelId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>

  <delete id="update" >
    UPDATE
      components_attachment_acquisition
    SET
    <if test="deleted!=null and deleted!=''">
       deleted =#{deleted},
    </if>
      update_time = #{updateTime},
      update_by =#{updateBy}
    WHERE
      id = #{id}
  </delete>



  <select id="query" resultMap="BaseResultMap">
    select <include refid="Base_Column_List" />
    from components_attachment_acquisition
    <where>
      deleted = 0
      <if test="targetId!=null and targetId!=''">
        and target_id =#{targetId}
      </if>
      <if test="targetTypes != null and targetTypes.size() > 0">
        and target_type in
        <foreach collection="targetTypes" item="targetType" open="(" separator="," close=")">
          #{targetType}
        </foreach>
      </if>
    </where>
  </select>

  <select id="selectPage" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from
      components_attachment_acquisition
    where
      deleted = 0
    limit
      #{page},#{size}

  </select>

  <update id="updateLevelIdBatch" >
    UPDATE components_attachment_acquisition
    <trim prefix = "set" suffixOverrides=",">
      <trim prefix = "level_id = case" suffix = "end,">
        <foreach collection="attachmentList" item="attachment" open=" " separator="" close=" ">
          when id = #{attachment.id} then #{attachment.levelId}
        </foreach>
        else level_id
      </trim>
    </trim>
    <where>
      deleted = 0
      and id in
      <foreach collection="attachmentList" item="attachment" open="(" separator="," close=")">
        #{attachment.id}
      </foreach>
    </where>
  </update>

  <select id="selectByLevelIdsAndTargetId" resultMap="BaseResultMap">
    select
      <include refid="Base_Column_List" />
    from
      components_attachment_acquisition
    where
      deleted = 0
    <if test="levelIds != null and levelIds.size() > 0">
      and level_id in
      <foreach collection="levelIds" item="levelId" open="(" separator="," close=")">
        #{levelId}
      </foreach>
    </if>
    and target_id = #{targetId}
  </select>


  <select id="selectByIds" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    components_attachment_acquisition
    where
    deleted = 0
    <if test="ids != null and ids.size() > 0">
      and id in
      <foreach collection="ids" item="id" open="(" separator="," close=")">
        #{id}
      </foreach>
    </if>
  </select>

  <select id="selectByIdAndTargetId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    components_attachment_acquisition
    where
    deleted = 0
    and id = #{id}
    and target_id = #{targetId}
  </select>

  <update id="deleteByLevelIdAndTargetIdAndTargetType" >
    UPDATE
    components_attachment_acquisition
    SET
    deleted = 1,
    update_time = #{updateTime},
    update_by =#{updateBy}
    WHERE
    level_id = #{levelId}
    and target_type = #{targetType}
    and target_id = #{targetId}
    and deleted = 0

  </update>
</mapper>